# Maps a Time GraphQL scalar to a Go time.Time struct
scalar Time

# Define an enumeration type and map it later to Ent enum (Go type)
# https://graphql.org/learn/schema/#enumeration-types
enum Status {
  IN_PROGRESS
  COMPLETED
}

interface Node {
  id: ID!
}

# Define an object type and map it later to the generated Ent model
type Todo implements Node {
  id: ID!
  createdAt: Time
  status: Status!
  priority: Int!
  text: String!
  parent: Todo
  children: [Todo!]
}

# Define an input type for the mutation below
# https://graphql.org/learn/schema/#input-types
input TodoInput {
  status: Status! = IN_PROGRESS
  priority: Int
  text: String!
  parent: ID
}

# Define a mutation for creating Todos
type Mutation {
  createTodo(todo: TodoInput!): Todo!
}

# Define a query for getting all Todos
type Query {
  todos: [Todo!]
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
}
